name: GitHub Actions Demo
on: push
jobs:
  # Test-App:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup Python
  #       uses: actions/setup-python@v2.3.2
  #     - name: Check out repository code
  #       uses: actions/checkout@v2
  #     - run: python3 --version
  #     - run: pip install flask
  #     - run: flask run --host=0.0.0.0 &
  #     - run: curl localhost:5000
  Build-and-Push:
    runs-on: ubuntu-latest
    # needs: Test-App
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_GITHUB_TOKEN_BBPHOENIX }}
      # Retrieve just repo name without the org
      # - id: get-repo-name
      #   run: |
      #     substring=$(echo ${{  github.repository  }} | cut -d '/' -f2)
      #     echo "::set-output name=repo_name::$substring"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{  github.repository.name  }}
          tags: |
            type=raw,value={{branch}}-{{sha}}
      - name: Build and push
        id: build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{  secrets.DOCKERHUB_USERNAME  }}/${{  github.repository.name  }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{  github.repository.name  }}:buildcache,mode=max
